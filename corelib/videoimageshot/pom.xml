<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>cc.eguid.cv.corelib</groupId>
		<artifactId>corelib</artifactId>
		<version>2019.4.16</version>
	</parent>
	<groupId>cc.eguid.cv.corelib</groupId>
	<artifactId>videoimageshot</artifactId>
	<name>videoimageshot</name>
	<version>2019.4.16</version>
	<url>https://blog.eguid.cc</url>
	<description>
版本更新
2019年7月17日
	1、调整了截图库代码结构
	2、向下兼容老版本，但不再推荐使用原有的调用方式
	3、新增了一个图像像素数据字节数组抓取器(BytesGrabber)，它能够获得图像的像素数组
	4、新增了一个Base64图像编码数据抓取器（Base64Grabber），用于取代原来的调用方式
	5、重新根据ffmpeg4.x最新解码库api实现视频解码流程，支持B、P帧解码，与原有代码不兼容，所以新创建新的FFmpeg4VideoImageGrabber以示区别
	6、推荐的使用方式是
	`
	//可以通过BufferedImageGrabber直接截取得到java图像
	BufferedImageGrabber grabber=new FFmpeg4VideoImageGrabber();
	//可以通过Base64Grabber轻松截取base64图像编码数据
	Base64Grabber grabber=new FFmpeg4VideoImageGrabber();
	//可以通过BufferGrabber获取截图图像的缓冲数据
	BufferGrabber grabber =new FFmpeg4VideoImageGrabber();
	//可以通过BytesGrabber获取截图图像的像素数组数据
	BytesGrabber grabber=new FFmpeg4VideoImageGrabber();
	`
	根据需要自行调用和管理，本项目只提供可靠的截图库，而不是大而全的框架。
	
2019年4月18日
1、支持截图缩放功能，可放大也可以缩小
2、修复因为视频检索超时和缓存上限设置导致无法截图的bug
3、修复非关键帧解码失败问题，只能截关键帧
4、调整FFmpeg日志等级，不再显示非错误的FFmpeg日志
	
2018.9.21
1、多项性能优化
①base64转换性能优化
②ByteBuffer转BufferedImage性能优化
③ffmpeg截图性能优化
④提供线程安全的API
2、修复rtsp截图崩溃的bug

2018.9.18
1、修复流媒体视频检索时间过长问题

2018.9.14
1、支持rtsp/rtmp/hls/媒体流和视频文件截图
2、支持bmp/jpg/png/jpeg/gif等多种格式图片保存
3、支持base64图像数据返回
</description>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<!-- ffmpeg -->
		<!-- javacv 
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacv-platform</artifactId>
		</dependency>
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacv</artifactId>
		</dependency>-->
		<!-- javacpp -->
		<dependency>
			<groupId>org.bytedeco</groupId>
			<artifactId>javacpp</artifactId>
		</dependency>
		<!-- ffmpeg -->
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg-platform</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
